http:
  port: 8080

apiEndpoints:
  health:
    host: '*'
    paths: '/health*'
  
  transcription:
    host: '*'
    paths: '/api/transcribe*'
  
  workflow:
    host: '*'
    paths: '/api/workflow*'
  
  video:
    host: '*'
    paths: '/api/video*'
  
  video-info:
    host: '*'
    paths: '/api/video-info*'
  
  root:
    host: '*'
    paths: '/'

serviceEndpoints:
  workflow-service:
    url: 'http://workflow-service:8004'

policies:
  - cors
  - expression
  - headers
  - rate-limit
  - request-size-limit
  - proxy
  - log

pipelines:
  health-pipeline:
    apiEndpoints:
      - health
    policies:
      - cors:
          - action:
              origin: 
                - 'http://localhost:3000'
                - 'http://127.0.0.1:3000'
              credentials: true
              methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
              allowedHeaders: ['Content-Type', 'Authorization', 'X-Request-ID']
      - headers:
          - action:
              forwardedHeaders:
                'X-Request-ID': 'req.requestID'
      - proxy:
          - action:
              serviceEndpoint: workflow-service
              changeOrigin: true

  transcription-pipeline:
    apiEndpoints:
      - transcription
    policies:
      - cors:
          - action:
              origin: 
                - 'http://localhost:3000'
                - 'http://127.0.0.1:3000'
              credentials: true
              methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
              allowedHeaders: ['Content-Type', 'Authorization', 'X-Request-ID']
      - rate-limit:
          - action:
              max: 100
              windowMs: 900000  # 15 minutes
              message: 'Too many transcription requests, please try again later'
      - request-size-limit:
          - action:
              limit: '10mb'
      - headers:
          - action:
              forwardedHeaders:
                'X-Request-ID': 'req.requestID'
      - log:
          - action:
              message: 'Transcription API: ${req.method} ${req.url}'
      - proxy:
          - action:
              serviceEndpoint: workflow-service
              changeOrigin: true

  workflow-pipeline:
    apiEndpoints:
      - workflow
    policies:
      - cors:
          - action:
              origin: 
                - 'http://localhost:3000'
                - 'http://127.0.0.1:3000'
              credentials: true
              methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
              allowedHeaders: ['Content-Type', 'Authorization', 'X-Request-ID']
      - rate-limit:
          - action:
              max: 50
              windowMs: 900000  # 15 minutes
              message: 'Too many workflow requests, please try again later'
      - request-size-limit:
          - action:
              limit: '10mb'
      - headers:
          - action:
              forwardedHeaders:
                'X-Request-ID': 'req.requestID'
      - log:
          - action:
              message: 'Workflow API: ${req.method} ${req.url}'
      - proxy:
          - action:
              serviceEndpoint: workflow-service
              changeOrigin: true

  video-pipeline:
    apiEndpoints:
      - video
      - video-info
    policies:
      - cors:
          - action:
              origin: 
                - 'http://localhost:3000'
                - 'http://127.0.0.1:3000'
              credentials: true
              methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
              allowedHeaders: ['Content-Type', 'Authorization', 'X-Request-ID']
      - rate-limit:
          - action:
              max: 30
              windowMs: 900000  # 15 minutes
              message: 'Too many video requests, please try again later'
      - headers:
          - action:
              forwardedHeaders:
                'X-Request-ID': 'req.requestID'
      - log:
          - action:
              message: 'Video API: ${req.method} ${req.url}'
      - proxy:
          - action:
              serviceEndpoint: workflow-service
              changeOrigin: true

  root-pipeline:
    apiEndpoints:
      - root
    policies:
      - cors:
          - action:
              origin: 
                - 'http://localhost:3000'
                - 'http://127.0.0.1:3000'
              credentials: true
              methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
              allowedHeaders: ['Content-Type', 'Authorization', 'X-Request-ID']
      - proxy:
          - action:
              serviceEndpoint: workflow-service
              changeOrigin: true
